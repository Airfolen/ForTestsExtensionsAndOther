// <auto-generated />
using System;
using BigDbUpdating.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BigDbUpdating.Migrations
{
    [DbContext(typeof(CandleDbContext))]
    partial class CandleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BigDbUpdating.Database.Candle", b =>
                {
                    b.Property<string>("ClassCode")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("class_code");

                    b.Property<string>("SecurityCode")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("security_code");

                    b.Property<DateTime>("TradeDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("trade_datetime");

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("close");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("high");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("low");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("open");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity");

                    b.Property<long>("QuantityPieces")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity_pieces");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric(36,8)")
                        .HasColumnName("volume");

                    b.HasKey("ClassCode", "SecurityCode", "TradeDateTime")
                        .HasName("m1_id");

                    b.ToTable("m1", (string)null);
                });

            modelBuilder.Entity("BigDbUpdating.Database.Entities.SplitCandleBackup", b =>
                {
                    b.Property<DateTime>("SplitTradeDate")
                        .HasColumnType("timestamptz")
                        .HasColumnName("split_datetime");

                    b.Property<Guid>("SplitId")
                        .HasColumnType("uuid")
                        .HasColumnName("split_id");

                    b.Property<string>("ClassCode")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("class_code");

                    b.Property<string>("SecurityCode")
                        .HasColumnType("varchar(12)")
                        .HasColumnName("security_code");

                    b.Property<DateTime>("TradeDateTime")
                        .HasColumnType("timestamptz")
                        .HasColumnName("trade_datetime");

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("close");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("high");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("low");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric(19,8)")
                        .HasColumnName("open");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity");

                    b.Property<long>("QuantityPieces")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity_pieces");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric(36,8)")
                        .HasColumnName("volume");

                    b.HasKey("SplitTradeDate", "SplitId", "ClassCode", "SecurityCode", "TradeDateTime")
                        .HasName("split_m1_id");

                    b.HasIndex("SplitId")
                        .HasDatabaseName("split_m1_idx");

                    b.ToTable("split_m1_backup", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
